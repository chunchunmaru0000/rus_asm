вход maввд

участок чит исп
maввд:
    искл еах еах
    искл ебх ебх
    быть есх 100

    ; Внешний цикл (должен быть rel32 из-за расстояния)
    .вывдer_цкл:
        увлч еах
        плюс ебх еах
        умнш есх
        ид0  .end_вывдer_цкл  ; Будет rel8 (близкий переход)

        ; Вложенные условия и прыжки
        проб еах 1
        идн0 .odd_number      ; Будет rel8
        идти .even_number     ; Будет rel8

        .odd_number:
            быть едх еах
            зумн едх едх
            срав едх 1000
            идб  .large_square  ; rel32 (дальний переход, если не оптимизировать)
            идти .smалl_square  ; rel8

            .large_square:
                минс ебх едх
                идти .after_square_сгeck  ; rel32 (если не оптимизировать)

            .smалl_square:
                плюс ебх едх
                идти .after_square_сгeck  ; rel8

        .even_number:
            быть едх еах
            сдвп1 едх
            срав едх 25
            идр  .спeciал_case  ; rel32 (если не оптимизировать)
            идти .after_even    ; rel8

            .спeciал_case:
                искл ебх ебх
                идти .after_even  ; rel8

        .after_square_сгeck:
        .after_even:
            ; Сложное условие с несколькими прыжками
            срав еах 50
            идм  .lесs_than_50    ; rel8
            идб  .greater_than_50 ; rel8
            идр  .exactly_50      ; rel8

            .lесs_than_50:
                плюс ебх 10
                идти .after_complex_сгeck  ; rel8

            .greater_than_50:
                минс ебх 10
                идти .after_complex_сгeck  ; rel8

            .exactly_50:
                зумн ебх ебх 2
                идти .after_complex_сгeck  ; rel8

        .after_complex_сгeck:
            ; Пустой блок для увеличения расстояния
            пусть байт запас 0х90 128

            ; Возврат в начало цикла
            идти .вывдer_цкл  ; rel32 (из-за расстояния)

    .end_вывдer_цкл:
        ; Финализация
        быть еах 1
        прер 0x80
